for(i in 1:9){
for(j in 1:9)linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
unlist(linetype)
linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
unlist(linetype)
linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
unlist(linetype)
df%>%
filter(t %in% seq(0,max(df$t), 0.1),
Winkel %in% atan(seq(0.4,1,0.05)))%>%
mutate(Winkel = parse_double(Winkel),
Winkel = round(Winkel/pi*180,4),
Winkel = factor(Winkel))%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = "5959")+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
df%>%
filter(t %in% seq(0,max(df$t), 0.1),
Winkel %in% atan(seq(0.4,1,0.05)))%>%
mutate(Winkel = parse_double(Winkel),
Winkel = round(Winkel/pi*180,4),
Winkel = factor(Winkel))%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = "9959")+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
df%>%
filter(t %in% seq(0,max(df$t), 0.1),
Winkel %in% atan(seq(0.4,1,0.05)))%>%
mutate(Winkel = parse_double(Winkel),
Winkel = round(Winkel/pi*180,4),
Winkel = factor(Winkel))%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = "9929")+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
df%>%
filter(t %in% seq(0,max(df$t), 0.1),
Winkel %in% atan(seq(0.4,1,0.05)))%>%
mutate(Winkel = parse_double(Winkel),
Winkel = round(Winkel/pi*180,4),
Winkel = factor(Winkel))%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line()+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
linetype
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
l_linetype <- list()
cnt<-1
for(i in linetype){
linetype[[cnt]] <- paste(linetype,i)
cnt <- cnt + 1
}
linetype[i]
l_linetype <- list()
cnt<-1
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
linetype[[cnt]] <- paste(linetype[i],i)
cnt <- cnt + 1
}
linetype
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
linetype[[cnt]] <- paste0(linetype[i],i)
cnt <- cnt + 1
}
linetype
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
for(j in 1:length(linetype)){
linetype[[cnt]] <- paste0(linetype[i],linetype[j])
cnt <- cnt + 1
}
}
linetype
1:length(linetype)
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
linetype
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
for(j in 1:length(linetype)){
l_linetype[[cnt]] <- paste0(linetype[i],linetype[j])
cnt <- cnt + 1
}
}
unlist(l_linetype)
1:length(linetype)
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
linetype
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(linetype)
linetype
linetype <- unlist(l_linetype)
linetype
l_linetype <- list()
cnt<-1
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
l_linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
linetype
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
for(j in 1:length(linetype)){
l_linetype[[cnt]] <- paste0(linetype[i],linetype[j])
cnt <- cnt + 1
}
}
unlist(l_linetype)
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
l_linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
for(j in 1:length(linetype)){
l_linetype[[cnt]] <- paste0(linetype[i],linetype[j])
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
linetype
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Maximale Flugdistanz.R', echo=TRUE)
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Maximale Flugdistanz.R')
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
l_linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
for(j in 1:length(linetype)){
l_linetype[[cnt]] <- paste0(linetype[i],linetype[j])
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
l_linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
for(j in 1:length(linetype)){
l_linetype[[cnt]] <- paste0(linetype[i],linetype[j])
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
length(linetype)
10/length(linetype)
seq(1,length(linetype),1/10/length(linetype))
1/10/length(linetype)
10/length(linetype)
seq(1,length(linetype),1/(10/length(linetype)))
seq(1,length(linetype),round(1/(10/length(linetype))))
seq(1,length(linetype),round(1/(n/length(linetype))))[2:10]
n = 10
seq(1,length(linetype),round(1/(n/length(linetype))))[2:10]
seq(1,length(linetype),round(1/(n/length(linetype))))[2:n+1]
seq(1,length(linetype),round(1/(n/length(linetype))))[2:n]
seq(1,length(linetype),round(1/(n/length(linetype))))[2:n+1]
linetype[length(linetype)]
df_plot <- df%>%
filter(t %in% seq(0,max(df$t), 0.1),
Winkel %in% atan(seq(0.4,1,0.05)))%>%
mutate(Winkel = parse_double(Winkel),
Winkel = round(Winkel/pi*180,4),
Winkel = factor(Winkel))
df_plot <- df%>%
filter(t %in% seq(0,max(df$t), 0.1),
Winkel %in% atan(seq(0.4,1,0.05)))%>%
mutate(Winkel = parse_double(Winkel),
Winkel = round(Winkel/pi*180,4),
Winkel = factor(Winkel))
df_plot%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line()+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
l_linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
for(j in 1:length(linetype)){
l_linetype[[cnt]] <- paste0(linetype[i],linetype[j])
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
df_plot
df_plot$Winkel
df_plot$Winkel%>%levels()%>%length()
n = df_plot$Winkel%>%levels()%>%length()
seq(1,length(linetype),round(1/(n/length(linetype))))[2:n+1]
seq(1,length(linetype),round(1/(n/length(linetype))))
length(linetype)
seq(1,length(linetype),round(1/(n/length(linetype))))
n = df_plot$Winkel%>%levels()%>%length()
seq(1,length(linetype),round(1/(n/length(linetype))))
seq(1,length(linetype),round(1/(n/length(linetype))))[2:n]
l_linetype <- list()
cnt<-1
for(i in 1:9){
for(j in 1:9){
l_linetype[[cnt]] <- paste0(i,j)
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
l_linetype <- list()
cnt<-1
for(i in 1:length(linetype)){
for(j in 1:length(linetype)){
l_linetype[[cnt]] <- paste0(linetype[i],linetype[j])
cnt <- cnt + 1
}
}
linetype <- unlist(l_linetype)
linetype
seq(1,length(linetype),round(1/(n/length(linetype))))
linetype[seq(1,length(linetype),round(1/(n/length(linetype))))]
df_plot%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = linetype)+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
n = df_plot$Winkel%>%
levels()%>%
length()
linetype[seq(1,length(linetype),round(1/(n/length(linetype))))]
linetype[length(linetype)]
linetype[seq(1,length(linetype),round(1/(n/length(linetype))))]
df_plot%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = "3313")+
coord_fixed(linetype = linetype[1])+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
linetype[1]
df_plot%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = linetype[1])+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
df_plot%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = linetype[2])+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
df_plot%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = linetype[3])+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
df_plot%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = linetype[4])+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
df_plot%>%
ggplot(aes(s_x1,s_x2, color = Winkel))+
geom_line(linetype = linetype[5])+
coord_fixed()+
geom_vline(data = s_df_max,aes(xintercept = s_x1))+
geom_hline(aes(yintercept = max(s_x2)),linetype = 2)+
geom_hline(aes(yintercept = 0))+
labs(title = "Flugbahn in C ",
subtitle = paste("Aufloesung:",t, "s",
"\nTarget hit Error", target_hit_error))
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Maximale Flugdistanz.R')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Maximale Flugdistanz.R')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Maximale Flugdistanz.R')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Maximale Flugdistanz.R')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Maximale Flugdistanz.R')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8', echo=TRUE)
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
getLoadedDLLs()
library(RCExtension)
getLoadedDLLs()
utils::tail(getLoadedDLLs(), 2) # the last 2 loaded ones, still a DLLInfoList
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
library(RCExtension)
library(RCExtension)
library(RCExtension)
library(RCExtension)
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8', echo=TRUE)
library(RCExtension)
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8', echo=TRUE)
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8', echo=TRUE)
source('G:/Meine Ablage/50_Informatik/100_R/Private Projekte/Flugbahn Geschoss/Schusswinkel findenV2.R', encoding = 'UTF-8')
library(RCExtension)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
